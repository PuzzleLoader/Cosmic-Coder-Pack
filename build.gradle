import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

plugins {
    id "java"
    id "application"
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "de.undercouch.download" version "5.6.0"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "com.badlogicgames.gdx-controllers:gdx-controllers-core:$gdxControllersVersion"
    implementation "com.badlogicgames.gdx-controllers:gdx-controllers-desktop:$gdxControllersVersion"
    implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion"
    implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"

    implementation "games.rednblack.miniaudio:miniaudio:$miniaudioVersion"
    implementation "games.rednblack.miniaudio:miniaudio:$miniaudioVersion:natives-desktop"
}

jar {
    archiveBaseName = "DEV-Cosmic Reach"
}

shadowJar {
    archiveFileName = "Cosmic Reach-${baseCrVersion}.jar"

    manifest {
        attributes(
                "Main-Class": "finalforeach.cosmicreach.lwjgl3.Lwjgl3Launcher"
        )
    }
}

tasks.register("setupWorkspace") {
    group = "cosmic_coder_pack"

    dependsOn("cleanUpAfter")
}

tasks.register("downloadCosmicCodeGen", Download) {
    group = "dont-touch--cosmic_coder_pack"

    src("https://github.com/PuzzleLoader/CosmicSourceGenerator/releases/download/${cosmicCodeGenVersion}/CosmicSourceGenerator.exe")
    acceptAnyCertificate(true)
    new File("$projectDir/build/tmp").mkdirs()
    dest("$projectDir/build/tmp/cosmic-code-gen.exe")
}

tasks.register("runCosmicCodeGen", Exec) {
    group = "dont-touch--cosmic_coder_pack"
    dependsOn("downloadCosmicCodeGen")

    workingDir "$projectDir"
    commandLine "$projectDir/build/tmp/cosmic-code-gen.exe", baseCrVersion
}

tasks.register("cleanUpAfter") {
    group = "dont-touch--cosmic_coder_pack"

    dependsOn("runCosmicCodeGen")
    new File("$projectDir/build/tmp/cosmic-code-gen.exe").delete()
}

application {
    mainClass = "finalforeach.cosmicreach.lwjgl3.Lwjgl3Launcher"
}

tasks.register("runCosmicReach", JavaExec) {
    group = "cosmic_coder_pack"

    classpath = sourceSets.main.runtimeClasspath
    mainClass = "finalforeach.cosmicreach.lwjgl3.Lwjgl3Launcher"
}

tasks.register("createDevJar", Jar) {
    group = "cosmic_coder_pack"

    archiveFileName = "DEV-Cosmic Reach-${baseCrVersion}.jar"

    manifest {
        attributes(
                "Main-Class": "finalforeach.cosmicreach.lwjgl3.Lwjgl3Launcher"
        )
    }
}

tasks.register("createReleaseJar", ShadowJar) {
    group = "cosmic_coder_pack"

    archiveFileName = "Cosmic Reach-${baseCrVersion}.jar"

    manifest {
        attributes(
                "Main-Class": "finalforeach.cosmicreach.lwjgl3.Lwjgl3Launcher"
        )
    }
}
